Assignment name  : microshell
Expected files   : *.c *.h
Allowed functions: malloc, free, write, close, fork, waitpid, signal, kill, exit, chdir, execve, dup, dup2, pipe, strcmp, strncmp
--------------------------------------------------------------------------------------

Write a program that will behave like executing a shell command
- Le chemin de l'exécutable sera absolu ou relatif mais votre programme ne doit pas construire de chemin (à partir de la variable PATH par exemple)
- Vous devez implémenter "|" et ";" comme dans bash
	- nous n'essaierons jamais un "|" immédiatement suivi ou précédé de rien ou "|" ou ";"
+ Votre programme doit implémenter la commande intégrée cd uniquement avec un chemin comme argument (pas de '-' ou sans paramètres)
	+ si cd a le mauvais nombre d'arguments, votre programme devrait afficher dans STDERR "error: cd: bad arguments" followed by a '\n'
	+ si le cd a échoué, votre programme devrait imprimer dans STDERR "error: cd: cannot change directory to path_to_change" followed 
		by a '\n' avec chemin_à_changer remplacé par l'argument à cd
	+ une commande cd ne sera jamais immédiatement suivie ou précédée d'un "|"
- Vous n'avez besoin de gérer aucun type de joker (*, ~ etc ...)
- Vous n'avez pas besoin de gérer les variables d'environnement ($ BLA ...)
- Si un appel système, à l'exception de execve et chdir, retourne une erreur votre programme devrait immédiatement afficher "error: fatal" 
	in STDERR followed by a '\n' et le programme devrait quitter
- Si execve a échoué, vous devez afficher "error: cannot execute executable_that_failed" in STDERR followed by a '\n' avec executable_that_failed 
	remplacé par le chemin de l'exécutable ayant échoué (ce devrait être le premier argument d'execve)
- Votre programme devrait être capable de gérer plus de centaines de "|" même si on limite le nombre de "fichiers ouverts" à moins de 30.

for example this should work:
$>./microshell /bin/ls "|" /usr/bin/grep microshell ";" /bin/echo i love my microshell
microshell
i love my microshell
$>

Hints:
Don't forget to pass the environment variable to execve

Hints:
Do not leak file descriptors!
cat microshell.c	microshell.c